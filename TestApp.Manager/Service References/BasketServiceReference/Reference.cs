//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestApp.Manager.BasketServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasketServiceReference.IBasketService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IBasketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/AddItem", ReplyAction="http://tempuri.org/IBasketService/AddItemResponse")]
        void AddItem(TestApp.Contract.Item_dc item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/AddItem", ReplyAction="http://tempuri.org/IBasketService/AddItemResponse")]
        System.Threading.Tasks.Task AddItemAsync(TestApp.Contract.Item_dc item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/RemoveItem", ReplyAction="http://tempuri.org/IBasketService/RemoveItemResponse")]
        bool RemoveItem(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/RemoveItem", ReplyAction="http://tempuri.org/IBasketService/RemoveItemResponse")]
        System.Threading.Tasks.Task<bool> RemoveItemAsync(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/GetBasket", ReplyAction="http://tempuri.org/IBasketService/GetBasketResponse")]
        TestApp.Contract.Item_dc[] GetBasket();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/GetBasket", ReplyAction="http://tempuri.org/IBasketService/GetBasketResponse")]
        System.Threading.Tasks.Task<TestApp.Contract.Item_dc[]> GetBasketAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IBasketService/DropBasket", ReplyAction="http://tempuri.org/IBasketService/DropBasketResponse")]
        void DropBasket();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IBasketService/DropBasket", ReplyAction="http://tempuri.org/IBasketService/DropBasketResponse")]
        System.Threading.Tasks.Task DropBasketAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/GetTotal", ReplyAction="http://tempuri.org/IBasketService/GetTotalResponse")]
        int GetTotal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/GetTotal", ReplyAction="http://tempuri.org/IBasketService/GetTotalResponse")]
        System.Threading.Tasks.Task<int> GetTotalAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBasketServiceChannel : TestApp.Manager.BasketServiceReference.IBasketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasketServiceClient : System.ServiceModel.ClientBase<TestApp.Manager.BasketServiceReference.IBasketService>, TestApp.Manager.BasketServiceReference.IBasketService {
        
        public BasketServiceClient() {
        }
        
        public BasketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BasketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddItem(TestApp.Contract.Item_dc item) {
            base.Channel.AddItem(item);
        }
        
        public System.Threading.Tasks.Task AddItemAsync(TestApp.Contract.Item_dc item) {
            return base.Channel.AddItemAsync(item);
        }
        
        public bool RemoveItem(string item) {
            return base.Channel.RemoveItem(item);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveItemAsync(string item) {
            return base.Channel.RemoveItemAsync(item);
        }
        
        public TestApp.Contract.Item_dc[] GetBasket() {
            return base.Channel.GetBasket();
        }
        
        public System.Threading.Tasks.Task<TestApp.Contract.Item_dc[]> GetBasketAsync() {
            return base.Channel.GetBasketAsync();
        }
        
        public void DropBasket() {
            base.Channel.DropBasket();
        }
        
        public System.Threading.Tasks.Task DropBasketAsync() {
            return base.Channel.DropBasketAsync();
        }
        
        public int GetTotal() {
            return base.Channel.GetTotal();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalAsync() {
            return base.Channel.GetTotalAsync();
        }
    }
}
